name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flet flet-runtime
          
      - name: Create assets directory
        run: mkdir -p assets icons
        
      - name: Create app icons
        run: |
          # You can replace this with actual icon generation or include icons in your repo
          wget -O icons/icon-192.png https://via.placeholder.com/192
          wget -O icons/icon-512.png https://via.placeholder.com/512
          
      - name: Create manifest.json
        run: |
          cat > manifest.json << 'EOL'
          {
            "name": "Quiz App",
            "short_name": "QuizApp",
            "description": "Juego de Preguntas y Respuestas",
            "start_url": "/",
            "display": "standalone",
            "background_color": "#ffffff",
            "theme_color": "#0175C2",
            "orientation": "portrait",
            "icons": [
              {
                "src": "icons/icon-192.png",
                "sizes": "192x192",
                "type": "image/png"
              },
              {
                "src": "icons/icon-512.png",
                "sizes": "512x512",
                "type": "image/png"
              }
            ]
          }
          EOL
          
      - name: Build APK
        run: flet build apk --project-name "Quiz App" --package-name "com.yourname.quizapp"
        
      - name: Debug - List build directory
        run: |
          echo "Listing build directory structure:"
          find build -type f -name "*.apk" | sort
          
      # Use a different approach to upload the artifact
      - name: Upload APK using GitHub CLI
        run: |
          APK_PATH=$(find build -type f -name "*.apk" | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "No APK file found!"
            exit 1
          else
            echo "Found APK at $APK_PATH"
            mkdir -p ./artifacts
            cp "$APK_PATH" ./artifacts/app-release.apk
            echo "APK copied to artifacts directory"
          fi
          
      # Use a more stable version of upload-artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: ./artifacts/app-release.apk
          if-no-files-found: error
